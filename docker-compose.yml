version: '3'

services:
  # Infastructure: The foundational event stream
  core_rapids:
    image: confluentinc/cp-kafka:5.3.2
    depends_on:
      - core_zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL://core_rapids:29092,LISTENER_EXTERNAL://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL
      KAFKA_LISTENERS: LISTENER_INTERNAL://core_rapids:29092,LISTENER_EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: core_zookeeper:2181
    ports:
      - 9092:9092

  core_zookeeper:
    image: zookeeper:3.5

  # core_schema:
  #   image: confluentinc/cp-schema-registry:5.4.0
  #   depends_on:
  #     - core_rapids
  #     - core_zookeeper
  #   environment:
  #     SCHEMA_REGISTRY_HOST_NAME: core_schema
  #     SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: core_rapids:29092
  #   ports:
  #     - 8081:8081

  # Standalone: isolated service to mess around with admin, producers, and consumers concepts
  standalone:
    build: ./src/standalone
    depends_on:
      - core_rapids
    volumes:
      - ./src/standalone:/app

  # Application Hydrator: Transfer messages from rapids to river
  example-service_hydrator:
    build: ./src/example-service/hydrator
    depends_on:
      - core_rapids
    volumes:
      - ./src/example-service/hydrator:/app

  # Web application
  client:
    build: ./src/client
    depends_on:
      - core_rapids
    ports:
      - 8080:8080
    volumes:
      - ./src/client/node_modules:/app/node_modules
      - ./src/client:/app
