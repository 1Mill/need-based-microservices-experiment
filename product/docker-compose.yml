version: '3.5'

services:
  answer:
    build: ./answer
    environment:
      CORE_RESULTS_URL: ${CORE_RESULTS_HOST}:${CORE_RESULTS_PORT}
      PORT: ${PRODUCT_ANSWER_PORT}
      PRODUCT_REDIS_HOST: ${PRODUCT_REDIS_HOST}
      PRODUCT_REDIS_PORT: ${PRODUCT_REDIS_PORT}
    depends_on:
        - redis
    networks:
      - core-results-network
      - product-client-network
      - product-redis-network
    ports:
      - ${PRODUCT_ANSWER_PORT}:${PRODUCT_ANSWER_PORT}
    volumes:
        - ./answer/node_modules:/app/node_modules
        - ./answer:/app

  ask:
    build: ./ask
    environment:
      CORE_RAPIDS_URL: ${CORE_RAPIDS_HOST}:${CORE_RAPIDS_PORT}
      PORT: ${PRODUCT_ASK_PORT}
      PRODUCT_REDIS_HOST: ${PRODUCT_REDIS_HOST}
      PRODUCT_REDIS_PORT: ${PRODUCT_REDIS_PORT}
    depends_on:
      - redis
    networks:
      - core-rapids-network
      - product-client-network
      - product-redis-network
    ports:
      - ${PRODUCT_ASK_PORT}:${PRODUCT_ASK_PORT}
    volumes:
        - ./ask/node_modules:/app/node_modules
        - ./ask:/app

  client:
    build: ./client
    depends_on:
      - answer
      - ask
    environment:
      PORT: ${PRODUCT_CLIENT_PORT}
      PRODUCT_ANSWER_URL: localhost:${PRODUCT_ANSWER_PORT} # Connecting over localhost for broswer access
      PRODUCT_ASK_URL: localhost:${PRODUCT_ASK_PORT} # Connecting over localhost for browser access
    networks:
      - product-client-network
    ports:
      - ${PRODUCT_CLIENT_PORT}:${PRODUCT_CLIENT_PORT}
    volumes:
      - ./client/node_modules:/app/node_modules
      - ./client:/app

  redis:
    image: redis:5-alpine
    networks:
      - product-redis-network

  river:
    image: confluentinc/cp-kafka:5.4.1
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://:${PRODUCT_RIVER_INTERNAL_PORT},EXTERNAL://:${PRODUCT_RIVER_PORT}
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:${PRODUCT_RIVER_INTERNAL_PORT},EXTERNAL://:${PRODUCT_RIVER_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: ${PRODUCT_ZOOKEEPER_HOST}:${PRODUCT_ZOOKEEPER_PORT}
    networks:
      - product-river-internal-network
      - product-river-network
    ports:
      - ${PRODUCT_RIVER_PORT}:${PRODUCT_RIVER_PORT}

  zookeeper:
    image: zookeeper:3.5
    networks:
      - product-river-internal-network

networks:
  core-rapids-network:
    name: core-rapids-network
  core-results-network:
    name: core-results-network
  product-client-network: {}
  product-redis-network: {}
  product-river-internal-network: {}
  product-river-network: {}
